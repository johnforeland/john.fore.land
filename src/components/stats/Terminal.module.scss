.terminal {
  position: absolute;
  z-index: 500;
}

.bar {
  width: 100%;
  box-sizing: border-box;
  height: 25px;
  background-color: #bbb;
  margin: 0 auto;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
}

.window {
  background-color: #151515a6;
  backdrop-filter: blur(5px);
  box-sizing: border-box;
  width: 100%;
  margin: 0 auto;
  padding: 20px;
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
  height: auto;
  transition: height 0.3s ease-in-out;
}

.buttons {
  height: 12px;
  width: 12px;
  border-radius: 50%;
  border: 1px solid #000;
  position: relative;
  left: 6px;
  background-color: #61c554;
  border-color: #5cb94f;
  display: inline-block;
  &:hover {
    cursor: pointer;
    transform: scale(1.1);
    transition: transform 0.2s ease-in-out;
  }

  &.minimize {
    left: 11px;
    background-color: #f4bf4f;
    border-color: #d1a244;
  }

  &.zoom {
    left: 16px;
    background-color: #ec6a5e;
    border-color: #de5f52;
  }
}

.text {
  position: relative;
  text-align: left;
  font-size: 1.25em;
  font-family: monospace;
  white-space: nowrap;
  overflow: hidden;
  width: 0;
}

.response {
  width: auto;
}

.cmd {
  color: #9cd9f0;
}

.response {
  color: #cdee69;
}

// Variables for animation timing
$cmd-count: 4;
$cmd-start: 1s;
$cmd-gap: 3s;
$cmd-duration: 1s;
$response-delay: 1s;

// Typing keyframes inherited from module
:global {
  @keyframes blink {
    0%,
    40% {
      opacity: 0;
    }
    50%,
    90% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }

  @keyframes type {
    to {
      width: 100%;
    }
  }

  @keyframes show {
    to {
      opacity: 1;
    }
  }
}

// Generate cmd, response, and cursor sequences
@for $i from 1 through 10 {
  .cmd#{$i} {
    animation: type
      $cmd-duration
      ($cmd-start + ($i - 1) * $cmd-gap)
      steps(20, end)
      forwards;
  }

  .cursor#{$i} {
    animation: blink 1s ($cmd-start + ($i - 1) * $cmd-gap) 2 forwards;
    @if $i == $cmd-count {
      animation-iteration-count: infinite;
    }
  }

  .response#{$i} {
    opacity: 0;
    animation: show 0s linear forwards;
    animation-delay: (
      $cmd-start + ($i - 1) * $cmd-gap + $cmd-duration + $response-delay
    );
    width: auto;
  }
}
